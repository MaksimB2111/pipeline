name: Node.js CI/CD Pipeline

on:
  push:
    branches: [main]
    tags: ['v*.*.*']
  pull_request:
    branches: [main]
  # Добавляю возможность запуска вручную
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm install
        
      - name: Run tests
        run: npm test
        
      - name: Lint code
        run: |
          npm install eslint --no-save
          npx eslint app.js || echo "Linting issues found"
          
      - name: Audit dependencies
        run: npm audit --audit-level=high

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: success() && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Generate build ID
        id: build-id
        run: echo "::set-output name=id::$(date +'%Y%m%d%H%M%S')"
        
      - name: Extract version information
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"
          else
            echo "::set-output name=tag::latest"
          fi
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/node-express-app:${{ steps.version.outputs.tag }}
            ${{ secrets.DOCKER_USERNAME }}/node-express-app:latest
          build-args: |
            APP_VERSION=${{ steps.version.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
  deployment-notification:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
      - name: Deployment status
        run: |
          echo "Приложение успешно протестировано и собрано"
          echo "Docker образ опубликован как ${{ secrets.DOCKER_USERNAME }}/node-express-app:${{ github.ref == 'refs/heads/main' && 'latest' || github.ref }}"
          echo "Время публикации: $(date +'%Y-%m-%d %H:%M:%S')"
          echo "Статус CI/CD: Завершено успешно"
